# This is a special configuration file to run tests on Travis-CI via
# GitHub notifications when changes are committed.
#
# For technical details, see http://travis-ci.org/
#
dist: bionic
language: python
python:
  - "3.6"
services:
  - docker
addons:
  ssh_known_hosts:
    - 35.190.148.87  # Development server
env:
  - ANSIBLE_CONFIG=ansible/ansible.cfg

before_install:
  - openssl aes-256-cbc -K $encrypted_444bb228fd3f_key -iv $encrypted_444bb228fd3f_iv -in travis/ci-mapswipe-firebase-adminsdk-80fzw-21ddcd1649.json.enc -out mapswipe_workers/serviceAccountKey.json -d
  # Create a mock file for wal-g setup
  - touch postgres/serviceAccountKey.json

install:
  - pip install --upgrade pip setuptools
  - pip install black==19.10b0 flake8==3.8.3 isort==5.5.2
  # Install ansible for automated deployment
  - sudo apt-get --quiet update
  - sudo apt-get --yes install software-properties-common
  - sudo apt-add-repository --yes --update ppa:ansible/ansible
  - sudo apt-get --yes install ansible

script:
  - black --check mapswipe_workers
  - flake8 --count --config mapswipe_workers/setup.cfg mapswipe_workers
  - isort --check --settings-file mapswipe_workers/setup.cfg mapswipe_workers
  - docker-compose up --build --detach firebase_deploy
  - docker-compose up --build --detach postgres
  - docker-compose run mapswipe_workers python -m unittest discover --verbose --start-directory tests/unittests/
  - docker-compose run mapswipe_workers python -m unittest discover --verbose --start-directory tests/integration/

after_success:
  # SSH setup to deploy to server after build.
  - apk add openssh-client
  - eval "$(ssh-agent -s)"  # start the ssh agent
  - mkdir -p $HOME/.ssh
  # Use config to define SSH connection variables (User, IdentityFile)
  - cp travis/ssh_config $HOME/.ssh/config
  - openssl aes-256-cbc -K $encrypted_c17fa81e6490_key -iv $encrypted_c17fa81e6490_iv -in travis/ssh-private-key.enc -out $HOME/.ssh/private-key -d
  - chmod 600 $HOME/.ssh/private-key
  - ssh-add $HOME/.ssh/private-key
  - chmod +x deploy.sh

deploy:
  # Deploy to server using Ansible
  provider: script
  script: bash deploy.sh
  on:
    branch: dev
