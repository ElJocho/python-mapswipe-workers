# This is a special configuration file to run tests on Travis-CI via
# GitHub notifications when changes are committed.
#
# For technical details, see http://travis-ci.org/

language: python

env:
  global:
    - PIP_WHEEL_DIR=$HOME/.cache/pip/wheels
    - PIP_FIND_LINKS=file://$HOME/.cache/pip/wheels
    - GDALINST=$HOME/gdalinstall
    - GDALBUILD=$HOME/gdalbuild
    - PROJINST=$HOME/gdalinstall
    - PROJBUILD=$HOME/projbuild

jobs:
  include:
    - python: "3.6"
      env:
        GDALVERSION="3.0.4"
        PROJVERSION="6.2.1"

# TODO: enable this again at later stage
#addons:
#  apt:
#    packages:
#    - libhdf5-serial-dev
#    - libgdal-dev
#    - libatlas-dev
#    - libatlas-base-dev
#    - gfortran

before_install:
  - mkdir -p ~/.config/mapswipe_workers
  - echo "$SERVICE_ACCOUNT_KEY" > ~/.config/mapswipe_workers/serviceAccountKey.json
  - python -m pip install -U pip setuptools
  - python -m pip install wheel
  - python -m pip install flake8 black
  # TODO: enable this again at later stage
  #- flake8 --config=mapswipe_workers/setup.cfg mapswipe_workers/mapswipe_workers/*.py
  #- black --check mapswipe_workers/mapswipe_workers/*.py
  # TODO: enable this again at later stage
  #- export PATH=$GDALINST/gdal-$GDALVERSION/bin:$PATH
  #- export LD_LIBRARY_PATH=$GDALINST/gdal-$GDALVERSION/lib:$LD_LIBRARY_PATH
  #- . travis_proj_install.sh
  #- travis_wait 20 . travis_gdal_install.sh
  #- export GDAL_DATA=$GDALINST/gdal-$GDALVERSION/share/gdal
  #- export PROJ_LIB=$GDALINST/gdal-$GDALVERSION/share/proj

install:
  - docker build -t mapswipe_postgres -f ./postgres/Dockerfile-dev ./postgres
  - python -m pip install --upgrade --force-reinstall --no-use-pep517 -e mapswipe_workers/
  #- if [ "$GDALVERSION" = "master" ]; then echo "Using gdal master"; elif [ $(gdal-config --version) == $(sed 's/[a-zA-Z].*//g' <<< $GDALVERSION) ]; then echo "Using gdal $GDALVERSION"; else echo "NOT using gdal $GDALVERSION as expected; aborting"; exit 1; fi
  #- "GDAL_CONFIG=$GDALINST/gdal-$GDALVERSION/bin/gdal-config python -m pip install --upgrade --force-reinstall --no-use-pep517 -e mapswipe_workers/"



before_script:
  - docker run -d -p 5432:5432 --name mapswipe_postgres -e POSTGRES_DB="$POSTGRES_DB" -e POSTGRES_USER="$POSTGRES_USER" -e POSTGRES_PASSWORD="$POSTGRES_PASSWORD" mapswipe_postgres
  # setup ssh so we can connect to the server from CI runner
  # TODO: let's move this into a separate script
  #- apk add openssh-client
  #- mkdir -p ~/.ssh
  #- chmod 700 ~/.ssh
  #- eval "$(ssh-agent -s)"
  #- export KEY_FILE=~/.ssh/api_server_ssh_key
  #- echo "$DEPLOYMENT_SERVER_PRIVATE_KEY" | tr -d '\r' > $KEY_FILE
  #- chmod 600 $KEY_FILE
  #- ssh-add $KEY_FILE > /dev/null
  #- ssh-keyscan -H "$DEPLOYMENT_SERVER_IP" >> ~/.ssh/known_hosts
  #- chmod 644 ~/.ssh/known_hosts

script:
  - python -m unittest -v tests.integration_tests.test_archive_project
  - python travis_test_gdal.py
  # TODO: move this to deployment section
  # - ssh -i $KEY_FILE -o StrictHostKeyChecking=no "mapswipe@$DEPLOYMENT_SERVER_IP"

cache:
  directories:
    - $GDALINST
    - ~/.cache/pip
