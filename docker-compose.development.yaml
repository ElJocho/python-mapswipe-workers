version: '3'
networks:
    mapswipe_network:
        driver: bridge
        ipam:
            config: [{subnet: 172.21.0.0/16}]
    api:
    manager_dashboard:
    mapswipe_workers:
    postgres:

services:
    manager_dashboard:
        container_name: manager_dashboard
        build:
            context: manager_dashboard/
        restart: unless-stopped
        ports:
            - '5000:80'
        expose:
            - "80"
        volumes:
            - ./manager_dashboard/manager_dashboard:/usr/share/nginx/html/manager_dashboard
        networks:
            - manager_dashboard

    mapswipe_workers_creation:
        container_name: mapswipe_workers_creation
        build:
            context: mapswipe_workers/
        environment:
            FIREBASE_DB: '${FIREBASE_DB}'
            FIREBASE_API_KEY: '${FIREBASE_API_KEY}'
            FIREBASE_TOKEN: '${FIREBASE_TOKEN}'
            GOOGLE_APPLICATION_CREDENTIALS: 'serviceAccountKey.json'
            POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
            POSTGRES_USER: '${POSTGRES_USER}'
            POSTGRES_DB: '${POSTGRES_DB}'
            POSTGRES_HOST: 'postgres'
            POSTGRES_PORT: 5432
            PGDATA: '/var/lib/postgresql/mapswipe'
            IMAGE_BING_API_KEY: '${IMAGE_BING_API_KEY}'
            IMAGE_ESRI_API_KEY: '${IMAGE_ESRI_API_KEY}'
            IMAGE_ESRI_BETA_API_KEY: '${IMAGE_ESRI_BETA_API_KEY}'
            IMAGE_MAPBOX_API_KEY: '${IMAGE_MAPBOX_API_KEY}'
            IMAGE_MAXAR_PREMIUM_API_KEY: '${IMAGE_MAXAR_PREMIUM_API_KEY}'
            IMAGE_MAXAR_STANDARD_API_KEY: '${IMAGE_MAXAR_STANDARD_API_KEY}'
            SLACK_TOKEN: '${SLACK_TOKEN}'
            SLACK_CHANNEL: '${SLACK_CHANNEL}'
            SENTRY_DSN: '${SENTRY_DSN}'
        depends_on:
            - postgres
        command: mapswipe_workers --verbose run --analysis_type=creation --schedule --time_interval=5
        volumes:
            - ./mapswipe-data:/root/.local/share/mapswipe_workers
        restart: "no"
        networks:
            - mapswipe_workers
            - postgres

    mapswipe_workers_stats:
        container_name: mapswipe_workers_stats
        build:
            context: mapswipe_workers/
        environment:
            FIREBASE_DB: '${FIREBASE_DB}'
            FIREBASE_API_KEY: '${FIREBASE_API_KEY}'
            FIREBASE_TOKEN: '${FIREBASE_TOKEN}'
            GOOGLE_APPLICATION_CREDENTIALS: 'serviceAccountKey.json'
            POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
            POSTGRES_USER: '${POSTGRES_USER}'
            POSTGRES_DB: '${POSTGRES_DB}'
            POSTGRES_HOST: 'postgres'
            POSTGRES_PORT: 5432
            PGDATA: '/var/lib/postgresql/mapswipe'
            IMAGE_BING_API_KEY: '${IMAGE_BING_API_KEY}'
            IMAGE_ESRI_API_KEY: '${IMAGE_ESRI_API_KEY}'
            IMAGE_ESRI_BETA_API_KEY: '${IMAGE_ESRI_BETA_API_KEY}'
            IMAGE_MAPBOX_API_KEY: '${IMAGE_MAPBOX_API_KEY}'
            IMAGE_MAXAR_PREMIUM_API_KEY: '${IMAGE_MAXAR_PREMIUM_API_KEY}'
            IMAGE_MAXAR_STANDARD_API_KEY: '${IMAGE_MAXAR_STANDARD_API_KEY}'
            SLACK_TOKEN: '${SLACK_TOKEN}'
            SLACK_CHANNEL: '${SLACK_CHANNEL}'
            SENTRY_DSN: '${SENTRY_DSN}'
        depends_on:
            - postgres
        command: mapswipe_workers --verbose run --analysis_type=generate-stats --schedule --time_interval=60
        volumes:
            - ./mapswipe-data:/root/.local/share/mapswipe_workers
        restart: "no"
        networks:
            - mapswipe_workers
            - postgres

    mapswipe_workers_firebase_to_postgres:
        container_name: mapswipe_workers_firebase_to_postgres
        build:
            context: mapswipe_workers/
        environment:
            FIREBASE_DB: '${FIREBASE_DB}'
            FIREBASE_API_KEY: '${FIREBASE_API_KEY}'
            FIREBASE_TOKEN: '${FIREBASE_TOKEN}'
            GOOGLE_APPLICATION_CREDENTIALS: 'serviceAccountKey.json'
            POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
            POSTGRES_USER: '${POSTGRES_USER}'
            POSTGRES_DB: '${POSTGRES_DB}'
            POSTGRES_HOST: 'postgres'
            POSTGRES_PORT: 5432
            PGDATA: '/var/lib/postgresql/mapswipe'
            IMAGE_BING_API_KEY: '${IMAGE_BING_API_KEY}'
            IMAGE_ESRI_API_KEY: '${IMAGE_ESRI_API_KEY}'
            IMAGE_ESRI_BETA_API_KEY: '${IMAGE_ESRI_BETA_API_KEY}'
            IMAGE_MAPBOX_API_KEY: '${IMAGE_MAPBOX_API_KEY}'
            IMAGE_MAXAR_PREMIUM_API_KEY: '${IMAGE_MAXAR_PREMIUM_API_KEY}'
            IMAGE_MAXAR_STANDARD_API_KEY: '${IMAGE_MAXAR_STANDARD_API_KEY}'
            SLACK_TOKEN: '${SLACK_TOKEN}'
            SLACK_CHANNEL: '${SLACK_CHANNEL}'
            SENTRY_DSN: '${SENTRY_DSN}'
        depends_on:
            - postgres
        command: mapswipe_workers --verbose run --analysis_type=firebase-to-postgres --schedule --time_interval=2
        volumes:
            - ./mapswipe-data:/root/.local/share/mapswipe_workers
        restart: "no"
        networks:
            - mapswipe_workers
            - postgres

    postgres:
        container_name: postgres
        build:
            context: postgres/
            dockerfile: Dockerfile-dev
        environment:
            POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
            POSTGRES_USER: '${POSTGRES_USER}'
            POSTGRES_DB: '${POSTGRES_DB}'
            PGDATA: '/var/lib/postgresql/mapswipe'
        command: postgres
        volumes:
          - ./postgres-data:/var/lib/postgresql/mapswipe
        restart: unless-stopped
        ports:
          - "5431:5432"
        networks:
            - postgres

    firebase_deploy:
        container_name: firebase_deploy
        build:
            context: firebase/
        environment:
            FIREBASE_TOKEN: '${FIREBASE_TOKEN}'
            FIREBASE_DB: '${FIREBASE_DB}'
        command: sh -c "firebase use $FIREBASE_DB && firebase deploy --token $FIREBASE_TOKEN --only functions,database:rules"
        volumes:
            - ./firebase:/firebase
